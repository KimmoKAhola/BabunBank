@using System.Globalization
@using DetectMoneyLaundering
@model DetectMoneyLaundering.Models.InspectAccountModel

@{
    ViewBag.Title = "title";
    Layout = "_Layout";

    var colorProperties = typeof(System.Drawing.Color)
        .GetProperties(System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public)
        .Where(x => x.PropertyType == typeof(System.Drawing.Color)
            && x.Name != "Transparent");
 
    var colors = new SelectList(colorProperties.Select(x => new { Value = x.Name, Text = x.Name }), "Value", "Text");
}



@if (Model.NormalTransactions.Count > 0 && Model.TransactionsOverLimit.Count > 0)
{
    <div class="container">
        <form asp-controller="Cashier" 
              asp-action="ScaleGraphs" 
              asp-route-id="@Model.CustomerId">
            <h2>Inspecting customer @Model.CustomerName</h2>
            <h3>Here are the suspicious transactions for this customer</h3>
            <p>Do you wish to change the image settings? Adjust the plots here:</p>
            <p>The slider determines the scaling factor. 10 is the default size (100 %) and each point makes the image 10 % smaller/larger. 30 means that the image will be 3 times larger.</p>
            
            <div class="create-customer-form-row">
                <input type="range" min="1" max="30" value="10" name="slider" oninput="rangeValue.innerText = this.value">
                <p id="rangeValue">10</p>
            </div>
            <span style="display: flex; flex: 1">
                <div class="create-customer-form-row">
                    <span class="Test">
                        <label>Marker Color</label>
                        @Html.DropDownList("Color", colors, new { @class = "dropdown-list" })
                    </span>
                    <span class="Test">
                        <label>Background Color</label>
                        @Html.DropDownList("BackgroundColor", colors, new { @class = "dropdown-list" })
                    </span>
                </div>
                
            </span>
            <div class="button-row">
                <button type="submit" class="create-customer-form-btn">Apply filters</button>
                <a asp-controller="Cashier" asp-action="Details" asp-route-id="@Model.CustomerId" class="create-customer-form-btn">Return</a>
            </div>
        </form>
    </div>
    <div class="container inspect">
        <div id="inspect-customer-plot-container">
            <div class="inspect-customer-plot">
                <img class="carousel-img" src="~/images/moneylaundering/@($"{PlotNames.SuspiciousTransactions}.png")" alt="todo">
                <img class="carousel-img" src="~/images/moneylaundering/@($"{PlotNames.NormalTransactions}.png")" alt="todo">
                <img style="border: 1px solid black" class="carousel-img" src="~/images/moneylaundering/@($"{PlotNames.PieChart}.png")" alt="todo">
            </div>
            <div class="inspect-customer-plot-buttons" style="margin-bottom: 72px; gap: 72px">
                <button class="create-customer-form-btn" onclick="prevImage()">❮</button>
                <button class="create-customer-form-btn" onclick="nextImage()">❯</button>
                <p id="image-index-display"></p>
            </div>
        </div>
    </div>
}
    else
    {
        <div style="display: grid; place-items: center">
            <span style="display: flex; flex-direction: column; align-items: center">
                <p style="margin-bottom: 24px">@TempData["Message"]</p>
                <a asp-controller="Cashier" asp-action="Details" asp-route-id="@Model.CustomerId" class="create-customer-form-btn" style="min-width: 250px">Return</a>
            </span>
        </div>
    }
<div class="container inpect">
    <table class="data-table">
        <thead class="data-table-header">
        <tr>
            <th>Transaction Id</th>
            <th>Transaction Amount</th>
            <th>Transaction Date</th>
            <th>Type</th>
        </tr>
        </thead>

        <tbody>
        @foreach (var transaction in @Model.TransactionsOverLimit)
        {

            <tr>
                <td>@transaction.TransactionId</td>
                <td>@transaction.Amount.ToString("C2", new CultureInfo("sv-SE"))</td>
                <td>@transaction.Date</td>
                <td>Transaction above @($"{15000:C2}")</td>
            </tr>
        }
        </tbody>
    </table>
</div>

    <script>
    let currentImageIndex = 0;
    const images = document.getElementsByClassName("carousel-img");
    const indexDisplay = document.getElementById("image-index-display");

    function showImage(index) {
        if (index < 0) {
            currentImageIndex = images.length - 1;
        } else if (index >= images.length) {
            currentImageIndex = 0;
        }
        for (let i = 0; i < images.length; i++) {
            images[i].style.display = "none";
        }
        images[currentImageIndex].style.display = "block";
        indexDisplay.innerText = `Picture ${currentImageIndex+1} of ${images.length}`;
    }

    function prevImage() {
        showImage(--currentImageIndex);
    }

    function nextImage() {
        showImage(++currentImageIndex);
    }

    showImage(currentImageIndex);
</script>