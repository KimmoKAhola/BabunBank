@using System.Globalization
@using BabunBank.Infrastructure.Enums
@using DataAccessLibrary.Data
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model BabunBank.Models.FormModels.Transactions.CreateTransferModel


@{
    ViewBag.Title = "title";
    Layout = "_Layout";
}
<div class="customer-container">
    <h1 style="max-width:1400px; width: 100%; text-align: start; margin-top: 72px">Please select a customer from the table and enter a transfer amount in the form at the bottom of the screen.</h1>
    <form class="customer-filter-form" method="post" asp-controller="Account" asp-action="Filter">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <input type="hidden" asp-for="FromAccountId">
        <input type="hidden" asp-for="FromCustomerId">
        <input type="hidden" asp-for="Date">
        <input type="hidden" asp-for="OperationSender">
        <input type="hidden" asp-for="OperationReceiver">
        <input type="hidden" asp-for="BalanceSender">
        <input type="hidden" asp-for="Symbol">
        <input type="hidden" asp-for="Bank">
        <input type="hidden" asp-for="Account">
        <div class="form-group" id="cashier-search-bar">
            <input name="q" value="@ViewBag.Q" placeholder="Search id or name">
        </div>
        <div class="form-group">
            @Html.DropDownList("pageSize", Enum.GetValues(typeof(CustomerDropdownMenu))
                .Cast<CustomerDropdownMenu>()
                .Select(x => new SelectListItem
                {
                    Text = $"{((int)x).ToString()} results per page",
                    Value = ((int)x).ToString(),
                    Selected = ViewBag.PageSize == (int)x
                }), new { @class = "dropdown-list" })
        </div>
        <div class="form-group">
            <input class="create-customer-form-btn" type="submit" value="Apply filters"/>
        </div>
        <div class="form-group">
            <button type="submit" formaction="/Account/ClearFilters" class="create-customer-form-btn" id="clear-filter-button">
                Clear filters
            </button>
        </div>
    </form>

    <form method="post" asp-controller="Account" asp-action="Transfer">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <input type="hidden" asp-for="FromAccountId">
        <input type="hidden" asp-for="FromCustomerId">
        <input type="hidden" asp-for="OperationSender">
        <input type="hidden" asp-for="OperationReceiver">
        <input type="hidden" asp-for="BalanceSender">
        <input type="hidden" asp-for="Symbol">
        <input type="hidden" asp-for="Bank">
        <input type="hidden" asp-for="Account">
            @if (@ViewBag.ListOfCustomers != null)
            {
                <table style="width: 1400px" id="transfer-data-table" class="data-table">
                    <thead>
                    <tr>
                        <th>Receiving Account Id</th>
                        <th>Receiving Customer Id</th>
                        <th>Receiving Customer Name</th>
                        <th>Receiving Customer Balance</th>
                    </tr>
                    </thead>
                    <tbody>
                    @foreach (var account in @ViewBag.ListOfCustomers as IEnumerable<Account>)
                    {
                        <tr>
                            <td id="transfer-radio"><input class="transfer-radio-button" type="radio" name="ToAccountId" asp-route-test="@account.AccountId" value="@account.AccountId"> @account.AccountId</td>
                            <td>@account.Dispositions.First().CustomerId</td>
                            <td>@account.Dispositions.First().Customer.Givenname @account.Dispositions.First().Customer.Surname
                                @if (@Model.FromCustomerId == @account.Dispositions.First().CustomerId)
                                {
                                    <span>(your account)</span>
                                }
                            </td>
                            <td>@account.Balance.ToString("C2", new CultureInfo("sv-SE"))</td>
                        </tr>

                    }
                    </tbody>
                </table>
            }
            <div class="transfer-left">
                <div class="create-customer-form-row">
                    <h2>Your current balance is: @Model.BalanceSender.ToString("C2", new CultureInfo("sv-SE")).
                        Please enter an amount to transfer to your selected account.</h2>
                </div>
                <div class="create-customer-form-row">
                    <span class="Test">
                        <label asp-for="Amount">Amount to transfer</label>
                        <input asp-for="Amount" type="number">
                        <span asp-validation-for="Amount" class="text-danger"></span>
                    </span>
                    <span class="Test">
                        <label asp-for="Date">Date of transfer</label>
                        <input asp-for="Date" type="date">
                        <span asp-validation-for="Date" class="text-danger"></span>
                    </span>
                </div>
                <div class="transfer-button-row">
                    <button type="submit" class="create-customer-form-btn" asp-route-pageNumber="@ViewBag.CurrentPage" asp-route-pageSize="@ViewBag.PageSize" asp-route-q="@ViewBag.Q">Create Transfer</button>
                    <a asp-controller="Cashier" asp-action="Details" asp-route-id="@Model.FromCustomerId" class="create-customer-form-btn">Cancel</a>
                </div>
            </div>
    </form>
    </div>
    
    
<div class="blogpost-pagination" style="margin-bottom: 72px">
    @if (ViewBag.CurrentPage > 1)
    {
        <a asp-controller="Account"
           asp-action="Transfer"
           asp-route-pageNumber="@(ViewBag.CurrentPage - 1)"
           asp-route-q="@ViewBag.Q"
           asp-route-pageSize="@ViewBag.PageSize">
            First
        </a>
        <a asp-controller="Account"
           asp-action="Transfer"
           asp-route-pageNumber="@(ViewBag.CurrentPage - 1)"
           asp-route-pageSize="@ViewBag.PageSize" class="create-customer-form-btn">
            Prev
        </a>

        <a class="pagination-inactive-button"
           asp-controller="Account"
           asp-route-pageNumber="@(ViewBag.CurrentPage - 1)"
           asp-route-pageSize="@ViewBag.PageSize">
            @(ViewBag.CurrentPage - 1)
        </a>
    }
    else
    {
        <a></a>
    }
    <a class="pagination-active-button"
       asp-controller="Account"
       asp-route-pageNumber="@ViewBag.CurrentPage"
       asp-route-pageSize="@ViewBag.PageSize">
        @ViewBag.CurrentPage
    </a>
    @if (ViewBag.CurrentPage < ViewBag.TotalPageCount)
    {
        <a class="pagination-inactive-button" asp-route-pageNumber="@(ViewBag.CurrentPage + 1)"
           asp-controller="Account"
           asp-route-pageSize="@ViewBag.PageSize">
            @(ViewBag.CurrentPage + 1)
        </a>
    }
    else
    {
        <a></a>
    }
    <a asp-route-pageNumber="@(ViewBag.CurrentPage + 1)"
       asp-route-q="@ViewBag.Q"
       asp-route-pageSize="@ViewBag.PageSize"
       asp-controller="Account"
       asp-action="Transfer"
       class="create-customer-form-btn">
        Next
    </a>
    <a asp-controller="Account"
       asp-action="Transfer"
       asp-route-pageNumber="@ViewBag.TotalPageCount"
       asp-route-pageSize="@ViewBag.PageSize">
        Last
    </a>
    <button id="goToTop-button" onclick="goToTop()">
        <i class="material-symbols-outlined">
            arrow_upward
        </i>
    </button>
</div>

<script>
    function goToTop(){
        document.body.scrollTop = 0; 
        document.documentElement.scrollTop = 0;
    }
</script>

<script>
    $(document).ready(function () {
    toastr.options = {
        "positionClass" : "toast-bottom-center",
        "showDuration": "300",
        "hideDuration": "1000",
        "timeOut": "5000",
        "extendedTimeOut": "1000",
        "hideEasing": "swing",
        "showEasing": "swing",
        "showMethod": "fadeIn",
        "hideMethod": "fadeOut",
        "toastClass" : "custom-toast-notification"
    };
    @if (!string.IsNullOrEmpty(ViewBag.Notification))
    {
        <text>
    toastr.warning('@ViewBag.Notification');
    </text>
    }
    });
</script>